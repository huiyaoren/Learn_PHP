<?php 

// 第五章 变量
if($_GET['a']) $_GET['a']();


// ----------------------------------------------------------------------------
// 1.消除 == 和 = 的困扰
function equal_beset(){
	if(12 === $dwarves){
	}
	// 把常量放在前面能够避免 把 == 误写为 = 时程序依然顺利执行的情况
	// 但如果 0 == $string 时 PHP 会把右侧变量先转换为整型数 
	// 为了避免此类问题 可以使用 0 === $string
}


// ----------------------------------------------------------------------------
// 2.为变量设定默认值
function var_default(){
	$cars = isset($_REQUEST['cars']) ? $_REQUEST['cars'] : $default_cars;

	// 对 0 false 值进行限制
	$cars = $_REQUEST['cars'] ? $_REQUEST['cars'] : $default_cars;
}


// ----------------------------------------------------------------------------
// 3.不使用临时变量而实现变量值的交换
function switch_value(){
	list($a, $b) = [$b, $a];
}
// 这种方不如用临时变量快
// 用速度换取代码可读性


// ----------------------------------------------------------------------------
// 4.动态创建变量名
function create_var_name(){
	// 使用 PHP 中 可变变量 的语法
	$animal = 'turtles';
	$turtles = 103;
	print $$animal;
}
// 遇到 $$ 时 PHP 会废弃右边的变量 取值将该值作为正真变量的名称


// ----------------------------------------------------------------------------
// 5.使用静态变量
function static_var(){
	// 让一个本地变量在两个函数调用间保留自己的值
	static $i = 0;
	$i++;
	return $i;
}
// 能被函数记住值得变量 只能被定义一次 不会被重定义
// 反复执行上面函数会使 $i 值递增
